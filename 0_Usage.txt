<크기비교> 함수 < 모듈 < 패키지 < 라이브러리
    - import pygame   (게임개발 모듈)
      . pygame.init(),pygame.display.set_mode(), while, pygame.quit()
    - from tkinter import * (GUI 개발)
      . root = Tk(), root.title(), root.geometry(), root.mainloop()
    - import numpy as np (행렬, array)
    - import matplotlib.pyplot as plt (그래프 그리기)
    - import pandas as pd (Data Frame(데이터 분석). 엑셀/csv과 연동)
    - from sympy import symbols, diff (수식 심벌 생성)
    - from scipy import interpolate,   (과학연산) 
    - import cv2 as cv    (이미지 내 인물/숫자 등 인식/분석(머신러닝과 연계), opencv)

    - 파이썬 모듈 한번에 업데이트 하기
      . pip install pipupgrade (처음 한번만 실행)
      . pipupgrade --check  (모듈의 최신버전 확인)
      . pipupgrade --verbose --latest --yes (모듈 한번에 업데이트)
      . pipupgrade --check

<도움 받는 방법>
1. 나도코딩 티스토리 - 자주묻는 질문
2. 디버깅
3. 구글링

<모듈설치>
1. 필요모듈 설치: 터미날 창 생성 후 명령어 입력 : pip install --upgrade 모듈명
    - pip list (설치되어있는 패키지,모듈 확인)
    - pip show 패키지(모듈)명  # 패키지에 대한 상세한 정보 확인
    - pip uninstall 패키지명 #패키지 삭제
    - pip list --outdated : old 버전 확인
    - pip install --upgrade 모듈명 : 새로운 모듈로 업그레이드
2. 모듈 버전확인: 모듈명 --version


<data화일 디렉토리>
/users/guniluk/desktop/pg/data/화일명
소스코드:  /users/guniluk/desktop/pg/project/화일명

<창 제어 / 실행>
화일창 없애거나 나타내기: command + B   
터미날 화면 깨끗하게: conmmand + K 
터미날 화면 없애기: conmmand + J 
    - 터미날 프롬프트 설정 확인: echo $PS1
    - 프롬프트 변경: PS1="BYH>"
화면 확대/축소: command + (+/-)
실행: ^F5  - ^-option-n

<실행/터미날창>
첫줄 #-*- coding:utf-8 -*-  : code runner 에러(SyntaxError: Non-ASCII character '\xec' in file)
code runner: 설정에서 "code-runner terminal" 을 입력한 후 나오는 설정을 체크-터미날에서 정상
code runner 설정: command + ',' 이후  code-runner.executormap에서 json화일 에디트(python3)

<Debug>
1. launch.js 화일 생성
2. 의심되는 위치 전에 F9 (breakpoint) 누름(빨간점)
3. 실행(F5) - breakpoint에서 실행 멈춤 (빨간점 노란테두리)
4. 1라인씩 진행 - F10(왼쪽창에 변수 값 나옴)
5. 함수 안 디버그: F11 
5. 디버그 중단(Shift + F5) 및 breakpoint 해제(F9)

<EDIT MODE>
#%% 실행섹션 지정하기(실행섹션 전후 삽입)
해당 함수 찾아가기: 
  - 함수명 위치에서 F12 혹은 command+enter 
  - 원래 위치로 돌아가가 : control + '-'
  - 다시 함수 진입: control + shift + '-'
  - 원래 위치로 돌아가가 : control + '-'
주석 처리: command + /
찾기/바꾸기: command + F 
제일 위로 가기: command + 위화살표
제일 아래로 가기: command + 아래화살표
전체 선택: 제일 윗줄에서 command + option + 아래화살표
제일 오른쪽 끝으로 가기: command + 오른쪽 화살표
제일 왼쪽 끝으로 가기: command + 왼쪽 화살표
해당 줄 선택: command + shift + 왼쪽 혹은 오른쪽 화살표
해당 줄 다른 줄로 옮기기: option + 위아래 화살표

해당 줄 잘라내기: command + x
해당 줄 복사하기: command + c
해당 줄 위아래로 복사하여 붙여넣기: option + shift + 위아래 화살표
해당 줄 븉여넣기: command + v
현재 줄 어디서든지 다음 줄 추가하고 바로 가기: command + enter

특정 동일 단어 모두 수정: 단어위에서 command + D (여러번) -> 삭제 및 수정 
이전의 커서 위치로 이동: command + U 

<실행화일 만들기: pyinstaller>
1. pyinstaller -option py화일명  
    - disk, build, 화일명.spec 3개 생성 --> disk 안에 실행화일 있음 
    - option : -F (하나의 터미날 실행화일)
               --onefile 화일명.py (하나의 화일로 생성)
               -w (GUI 모드 실행화일)  *그림화일은 같은 디렉토리이름으로 만들어 복사
               --add-data '추가할 화일(경로/*화일명): 어느위치에 넣을지 디렉토리(실행화일과 같으면 ., 그 밑이면 그 폴더 이름' : txt나 png화일 등 add 
               -i 'ico 경로/화일명' : 아이콘 변경
    * 리소스 화일 절대경로 지정 필요: 구글에서 'pyinstaller add folder with images in exe file' 검색
        . os 코드 복사, 사진화일 경로에 함수(리소스_패스) 적용